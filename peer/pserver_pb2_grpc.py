# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pserver_pb2 as pserver__pb2


class PServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/PServer/Login',
                request_serializer=pserver__pb2.UserData.SerializeToString,
                response_deserializer=pserver__pb2.Response.FromString,
                )
        self.Logout = channel.unary_unary(
                '/PServer/Logout',
                request_serializer=pserver__pb2.Username.SerializeToString,
                response_deserializer=pserver__pb2.Response.FromString,
                )
        self.DownloadFileRequest = channel.unary_unary(
                '/PServer/DownloadFileRequest',
                request_serializer=pserver__pb2.File.SerializeToString,
                response_deserializer=pserver__pb2.Response.FromString,
                )
        self.DownloadFile = channel.unary_unary(
                '/PServer/DownloadFile',
                request_serializer=pserver__pb2.File.SerializeToString,
                response_deserializer=pserver__pb2.Response.FromString,
                )
        self.UploadFileRequest = channel.unary_unary(
                '/PServer/UploadFileRequest',
                request_serializer=pserver__pb2.File.SerializeToString,
                response_deserializer=pserver__pb2.Response.FromString,
                )
        self.UploadFile = channel.unary_unary(
                '/PServer/UploadFile',
                request_serializer=pserver__pb2.File.SerializeToString,
                response_deserializer=pserver__pb2.Response.FromString,
                )


class PServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFileRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFileRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=pserver__pb2.UserData.FromString,
                    response_serializer=pserver__pb2.Response.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=pserver__pb2.Username.FromString,
                    response_serializer=pserver__pb2.Response.SerializeToString,
            ),
            'DownloadFileRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadFileRequest,
                    request_deserializer=pserver__pb2.File.FromString,
                    response_serializer=pserver__pb2.Response.SerializeToString,
            ),
            'DownloadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=pserver__pb2.File.FromString,
                    response_serializer=pserver__pb2.Response.SerializeToString,
            ),
            'UploadFileRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFileRequest,
                    request_deserializer=pserver__pb2.File.FromString,
                    response_serializer=pserver__pb2.Response.SerializeToString,
            ),
            'UploadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=pserver__pb2.File.FromString,
                    response_serializer=pserver__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PServer/Login',
            pserver__pb2.UserData.SerializeToString,
            pserver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PServer/Logout',
            pserver__pb2.Username.SerializeToString,
            pserver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFileRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PServer/DownloadFileRequest',
            pserver__pb2.File.SerializeToString,
            pserver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PServer/DownloadFile',
            pserver__pb2.File.SerializeToString,
            pserver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFileRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PServer/UploadFileRequest',
            pserver__pb2.File.SerializeToString,
            pserver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PServer/UploadFile',
            pserver__pb2.File.SerializeToString,
            pserver__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
